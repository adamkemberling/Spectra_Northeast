---
title: "Linear Model Summary Figures"
format: 
  html:
    toc: true
    self-contained: true
execute: 
  echo: false
  warning: false
  message: false
  comment: ""
  fig-align: center
  fig-height: 4
---

# About

All linear models are run, tuned, and saved in their own individual scripts. This quarto doc loads the models and the data that was used in them and then generates figures/tables for individual model outputs or cross-group comparisons.

```{r}


####  Packages  ####
library(lme4)
library(lmerTest)
library(emmeans)
library(merTools)
library(tidyquant)
library(tidyverse)
library(gmRi)
library(ggeffects)
library(scales)
library(performance)
library(patchwork)
library(gtsummary)
library(gt)

# Theme
theme_set(theme_gmri(rect = element_rect(fill = "white", color = NA), legend.position = "bottom"))

manual_colors <- c(
  "Well-Studied Community" = "#00608A",
  "Data-Limited Community" = "#EA4F12",
  "Spring"                 = "#00736D",
  "Fall"                   = "#EACA00",
  "No Seasonal Effect"     = "#535353"
)
     
```

# Source Modeling Sripts

```{r}
#| label: source-model-scripts
#| eval: false
#| message: false
#| warning: false
#| echo: false

# source(here::here("Code/R/modeling/lm_models/large_community_medlen_lm.R"))
# source(here::here("Code/R/modeling/lm_models/large_community_lenspectra_lm.R"))
# source(here::here("Code/R/modeling/lm_models/wigley_community_medlen_lm.R"))
# source(here::here("Code/R/modeling/lm_models/wigley_community_medwt_lm.R"))
# source(here::here("Code/R/modeling/lm_models/wigley_community_lenspectra_lm.R"))
# source(here::here("Code/R/modeling/lm_models/wigley_community_bmspectra_lm.R"))

```

### Load Models/Data

```{r}
#| label: load rds lists


sc_wt <- read_rds(here::here("Data/models_and_results/sc_medwt.RDS"))
sc_len <- read_rds(here::here("Data/models_and_results/sc_medlen.RDS"))
sc_lenb <- read_rds(here::here("Data/models_and_results/sc_lenspectra.RDS"))
sc_wtb <- read_rds(here::here("Data/models_and_results/sc_bmspectra.RDS"))
lc_len <- read_rds(here::here("Data/models_and_results/lc_medlen.RDS"))
lc_lenb <- read_rds(here::here("Data/models_and_results/lc_lenspectra.RDS"))



pass1_mods <- list(
  "Well-Studied_Median Weight"    = sc_wt,
  "Well-Studied_Median Length"    = sc_len,
  "Well-Studied_Length Spectra"   = sc_lenb,
  "Well-Studied_Bodymass Spectra" = sc_wtb,
  "Data-Limited_Median Length"    = lc_len,
  "Data-Limited_Length Spectra"   = lc_lenb)

```

# Pass 1 Fit

```{r}
p1_preds <- map_df(
  pass1_mods,
  function(x){
    dat <- pluck(x, "model_data")
    mod <- pluck(x, "pass_1")
    dat <- broom::augment(mod, newdata = dat, interval = "confidence") %>% 
    # Can we rename the right dependent var?  
    mutate(actual = .fitted + .resid)
    return(dat)
  },
  .id = "model_name"
)


# # Too much to look at, but generally works
# p1_preds %>% 
#   separate(model_name, into = c("community", "metric"), sep = "_") %>% 
#   mutate(group_id = str_c(community, "-", season)) %>% 
#   filter(!str_detect(metric, "Spectra")) %>% 
#   ggplot() +
#   geom_point(aes(yr_num, actual, color = community), alpha = 0.3, size = 0.8) +
#   geom_ribbon(aes(yr_num, ymin = .lower, ymax = .upper, group = group_id), alpha = 0.2) +
#   geom_line(aes(yr_num, .fitted, color = community, group = group_id)) +
#   facet_grid(metric ~ survey_area, scales = "free")


```



# Pass 1: Model Summary Tables

The following tabs display the summary results from the linear model results from the first pass of analyses. These look at trends and mean differences in annual body size or size spectra among four regions of the Northeast US Continental Shelf.

The acronyms (WS) & (DL) are references to which finfish community is being tested.     

**WS**: The "Well Studied" community refers to the 74 species with length-weight relationships published in Wigley et al.

**DL**: The "Data Limited"community refers to the broader finfish group that does not have published/reliable length-weight relationships.
 
Each table below displays the group level significance, as well as a predictor level significance from an F-Test is shown (uses car::Anova under the hood).

::: panel-tabset

### Bottom Temperature

```{r}


### Are bottom Temperatures Different Seasonally
# Degree symbol
deg_c <- "\u00b0C"


# Are bottom temperatures different seasonally
btemp_lm <- lm(bot_temp ~ survey_area * season * yr_num, data = lc_len$model_data)
tbl_regression(btemp_lm)


```





### Median Length (WS)

```{r}
# Small Community
mod_1 <- sc_len$pass_1 
(sc_len_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels())


# Seasonal Posthocs
```

### Median Length (DL))

```{r}
# Large Community
mod_1 <- lc_len$pass_1 
(lc_len_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels() )


```


### Median Weight

```{r}
# Small Community
mod_1 <- sc_wt$pass_1
(sc_wt_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels() )
```

### Length Spectra (WS)

```{r}
# Small Community
mod_1 <- sc_lenb$pass_1 
(sc_lenb_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels())
```


### Length Spectra (DL)

```{r}
# Large Community
mod_1 <- lc_lenb$pass_1 
(lc_lenb_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels())

```


### Mass Spectra

```{r}
# Small Community
mod_1 <- sc_wtb$pass_1
(sc_wtb_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels() )
```
:::

# Pass 1: Marginal Means

::: panel-tabset


### Bottom Temperature

```{r}
# Regional marginal Means
btemp_emmean_r <- emmeans(
      btemp_lm,
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response") %>% 
      pluck(1) %>% 
      as.data.frame() %>% 
  mutate_if(is.numeric, ~round(.x, 3))


# Reg * Seas marginal Means
btemp_emmean <- emmeans(
      btemp_lm,
      list(pairwise ~ survey_area + season), 
      adjust = "tukey",
      type = "response") %>% 
      pluck(1) %>% 
      as.data.frame() 



# Plot emmeans
ggplot(btemp_emmean, aes(survey_area, emmean, color = season)) +
  geom_pointrange(size = 1,aes(ymin = lower.CL, ymax = upper.CL),
                  position = position_dodge(width = 0.25)) +
  scale_color_manual(values = manual_colors) +
  scale_y_continuous(labels = label_number(suffix = deg_c)) +
  labs(y = "Marginal Mean Bottom Temperature",
       x = "Region",
       color = "Season",
       title = "Estimated Marginal Means")


# EMMean Table
btemp_emmean_r %>% 
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  gt() %>% 
  tab_header(title = "Bottom Temperature EMMeans") 

# # Seasonal Differences - for in-text
# btemp_emmean %>% 
#   dplyr::select(-c(4:7)) %>% 
#   pivot_wider(names_from = "season", values_from = "emmean") %>% 
#   mutate(seas_diff = Fall - Spring)



# Pairwise post-hoc
btemp_emmean_phoc <- emmeans(
      btemp_lm,
      list(pairwise ~ survey_area + season), 
      adjust = "tukey",
      type = "response") %>% 
      pluck(2) %>% 
      as.data.frame() %>% 
  mutate_if(is.numeric, ~round(.x, 3))




btemp_emmean_phoc %>% 
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  gt() %>% 
  tab_header(title = "Bottom Temperature Pairwise Post-Hoc") 

```



### Median Length


```{r}
#| label: median length emmeans
len_emmeans <- map_dfr(
  list(
    "Data-Limited Community" = lc_len,
    "Well-Studied Community" = sc_len
    ),
  function(x){
    region_posthoc <- emmeans(
    pluck(x, "pass_1"), 
    list(pairwise ~ survey_area), 
    adjust = "tukey",
    type = "response")
  region_posthoc[[1]] %>% 
    as.data.frame()
  }, .id = "community"
)




# Plotting emmean
ggplot(
  len_emmeans,
  aes(survey_area, emmean, ymin = lower.CL, ymax = upper.CL,  color = community)) +
  geom_pointrange(size = 1,
    position = position_dodge(width = 0.5), 
    alpha = 1) +
  scale_color_manual(values = manual_colors) +
  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
  labs(
    y = "Median Length (cm)",
    x = NULL,
    color = "Finfish Community",
    title = "Estimated Marginal Means")


# EMMean Table
len_emmeans %>% 
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Median Length EMMeans") 




# Pairwise post-hoc
len_emmean_phoc <- map_dfr(
  list(
    "Data-Limited Community" = lc_len,
    "Well-Studied Community" = sc_len
    ),
  function(x){
    region_posthoc <- emmeans(
    pluck(x, "pass_1"),
    list(pairwise ~ survey_area),
    adjust = "tukey",
    type = "response")
  region_posthoc[[2]] %>%
    as.data.frame()
  }, .id = "community"
)


len_emmean_phoc %>% 
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Median Length Pairwise Post-Hoc") 

```


### Median Weight

```{r}
#| label: median weight emmeans

# Group Means
wt_emmeans <- map_dfr(
  list(
    "Well-Studied Community" = sc_wt
  ),
  function(x){
    region_posthoc <- emmeans(
      pluck(x, "pass_1"), 
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response") %>% 
      pluck(1) %>% 
      as.data.frame()
  }, .id = "community"
)




# Plotting emmean
ggplot(
  wt_emmeans,
  aes(survey_area, response, ymin = lower.CL, ymax = upper.CL,  color = community)) +
  geom_pointrange(size = 1,
    position = position_dodge(width = 0.5), 
    alpha = 1) +
   scale_color_manual(values = manual_colors) +
  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
  labs(
    y = "Median Weight (kg)",
    x = NULL,
    color = "Finfish Community",
    title = "Estimated Marginal Means")



# Table
wt_emmeans %>% 
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Median Weight EMMeans") 



# Pairwise post-hoc
wt_emmean_phoc <- map_dfr(
  list(
    "Well-Studied Community" = sc_wt
    ),
  function(x){
    region_posthoc <- emmeans(
    pluck(x, "pass_1"),
    list(pairwise ~ survey_area),
    adjust = "tukey",
    type = "response")
  region_posthoc[[2]] %>%
    as.data.frame()
  }, .id = "community") 


wt_emmean_phoc %>% 
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Median Weight Pairwise Post-Hoc") 
```


### Length Spectra

This is the only pass 1 model where seasonal differences were significant (and also only for the well-studied community).

```{r}
#| label: length spectra emmeans
#| fig-height: 6


# Group Means
lenb_emmeans <- bind_rows(
  list(
    "Data-Limited Community" = emmeans(
      pluck(lc_lenb, "pass_1"), 
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response") %>%
      pluck(1) %>% 
      as.data.frame() %>% 
      mutate(season = "No Seasonal Effect"),
    
    "Well-Studied Community" = emmeans(
      pluck(sc_lenb, "pass_1"),
      list(pairwise ~ survey_area + season), 
      adjust = "tukey",
      type = "response") %>% 
      pluck(1) %>% 
      as.data.frame())
  , .id = "community"
)


# Plot
ggplot(
  lenb_emmeans,
  aes(survey_area, emmean, ymin = lower.CL, ymax = upper.CL,  color = season)) +
  geom_pointrange(size = 1,
    position = position_dodge(width = 0.5), 
    alpha = 1) +
  scale_color_manual(values = manual_colors) +
  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
  facet_wrap(~community, ncol = 1) +
  labs(
    y = "Length Spectra Slope (b)",
    x = NULL,
    color = "Finfish Community",
    title = "Estimated Marginal Means")



# Table
lenb_emmeans %>% 
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Length Spectra EMMeans")



# Pairwise post-hoc
lenb_emmean_phoc <- bind_rows(
  list(
    "Data-Limited Community" = emmeans(
      pluck(lc_lenb, "pass_1"), 
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response") %>%
      pluck(2) %>% 
      as.data.frame(),
    
    "Well-Studied Community" = emmeans(
      pluck(sc_lenb, "pass_1"),
      list(pairwise ~ survey_area + season), 
      adjust = "tukey",
      type = "response") %>% 
      pluck(2) %>% 
      as.data.frame())
  , .id = "community"
) %>% 
  mutate_if(is.numeric, ~round(.x, 3))


lenb_emmean_phoc %>% 
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Length Spectra Pairwise Post-Hoc") 

```



### Mass Spectra

```{r}
#| label: weight spectra emmeans

# Group Means
wtb_emmeans <- map_dfr(
  list(
    "Well-Studied Community" = sc_wtb),
  function(x){
    region_posthoc <- emmeans(
      pluck(x, "pass_1"),
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response") %>% 
      pluck(1) %>% 
      as.data.frame()
  }, .id = "community"
)



# Plotting emmean
ggplot(
  wtb_emmeans,
  aes(survey_area, emmean, ymin = lower.CL, ymax = upper.CL,  color = community)) +
  geom_pointrange(size = 1,
    position = position_dodge(width = 0.5), 
    alpha = 1) +
   scale_color_manual(values = manual_colors) +
  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
  labs(
    y = "Body Mass Spectra (b)",
    x = NULL,
    color = "Finfish Community",
    title = "Estimated Marginal Means")



# Table
wtb_emmeans %>% 
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Mass Spectra EMMeans")




# Group Means
wtb_emmean_phoc <- map_dfr(
  list(
    "Well-Studied Community" = sc_wtb),
  function(x){
    region_posthoc <- emmeans(
      pluck(x, "pass_1"),
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response") %>% 
      pluck(2) %>% 
      as.data.frame()
  }, .id = "community") %>% 
  mutate_if(is.numeric, ~round(.x, 3))


wtb_emmean_phoc %>% 
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Mass Spectra Pairwise Post-Hoc") 
```



:::

# Pass 1: Marginal Mean Trends


::: panel-tabset

### Bottom Temperature


```{r}
#| label: bottom temp fig

## Trends
bt_emtrends <- emtrends(
      object = btemp_lm, 
      specs  =  ~ survey_area + season,
      var    = "yr_num",
      adjust = "bonf") %>% 
    as_tibble()


# Plotting Slope 
bt_emtrends  %>% 
    mutate(flag_alpha = ifelse(lower.CL > 0 | upper.CL <0, 1, 0.)) %>% 
    ggplot(aes(color = season, survey_area, yr_num.trend, ymin = lower.CL, ymax = upper.CL)) +
    geom_pointrange(size = 1,aes(alpha = I(flag_alpha)),
                    position = position_dodge(width = 0.5)) +
    geom_hline(yintercept = 0, linetype = 2, color = "black") +
    scale_color_manual(values = manual_colors) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
    labs(
      title = "Estimated Marginal Means of Linear Trends",
      x = "Region",
      y = "beta",
      color = "Finfish Community")

 

# Table
bt_emtrends %>%
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  gt() %>% 
  tab_header(title = "Bottom Temperature EMTrends")
```



### Median Length


```{r}
#| label: median length fig

## Trends
len_emtrends <- map_dfr(
  list(
    "Data-Limited Community" = lc_len,
    "Well-Studied Community" = sc_len),
  function(x){
    region_posthoc <- emtrends(
      object = pluck(x, "pass_1"), 
      specs  =  ~ survey_area,
      var    = "yr_num",
      adjust = "bonf") %>% 
    as_tibble()
  }, .id = "community"
)


# Plotting Slope 
len_emtrends  %>% 
    mutate(flag_alpha = ifelse(lower.CL > 0 | upper.CL <0, 1, 0.4)) %>% 
    ggplot(aes(color = community, survey_area, yr_num.trend, ymin = lower.CL, ymax = upper.CL)) +
    geom_pointrange(size = 1,aes(alpha = I(flag_alpha)),
                    position = position_dodge(width = 0.5)) +
    geom_hline(yintercept = 0, linetype = 2, color = "black") +
    scale_color_manual(values = manual_colors) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
    labs(
      title = "Estimated Marginal Means of Linear Trends",
      x = "Region",
      y = "beta",
      color = "Finfish Community")

 

# Table
len_emtrends %>%
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Median Length EMTrends")
```


### Median Weight


```{r}


# Group Means Trends
wt_emtrends <- map_dfr(
  list(
    "Well-Studied Community" = sc_wt
  ),
  function(x){
    region_posthoc <- emtrends(
      object = pluck(x, "pass_1"), 
      specs  =  ~ survey_area,
      var    = "yr_num",
      adjust = "bonf") %>% 
    as_tibble()
  }, .id = "community"
)


# Plotting Slope 
wt_emtrends  %>% 
    mutate(flag_alpha = ifelse(lower.CL > 0 | upper.CL <0, 1, 0.4)) %>% 
    ggplot(aes(color = community, survey_area, yr_num.trend, ymin = lower.CL, ymax = upper.CL)) +
    geom_pointrange(size = 1,aes(alpha = I(flag_alpha)),
                    position = position_dodge(width = 0.5)) +
    scale_color_manual(values = manual_colors) +
    geom_hline(yintercept = 0, linetype = 2, color = "black") +
    scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
    labs(
      title = "Estimated Marginal Means of Linear Trends",
      x = "Region",
      y = "beta",
      color = "Finfish Community")

 
# Table
wt_emtrends %>%
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Median Weight EMTrends")

```

### Length Spectra

This is the only pass 1 model where seasonal differences were significant (and also only for the well-studied community).


```{r}
#| fig-height: 6

## Trends
lenb_emtrends <- bind_rows(
  list(
    "Data-Limited Community" = emtrends(
      pluck(lc_lenb, "pass_1"), 
      specs  =  ~ survey_area,
      var    = "yr_num",
      adjust = "bonf") %>%
      as_tibble() %>% 
      mutate(season = "No Seasonal Effect"),
    
    "Well-Studied Community" = emtrends(
      pluck(sc_lenb, "pass_1"),
      specs  =  ~ survey_area + season,
      var    = "yr_num",
      adjust = "bonf") %>%
      as_tibble())
  , .id = "community"
)



# Plotting Slope 
lenb_emtrends  %>% 
    mutate(flag_alpha = ifelse(lower.CL > 0 | upper.CL <0, 1, 0.4)) %>% 
    ggplot(aes(color = season, survey_area, yr_num.trend, ymin = lower.CL, ymax = upper.CL)) +
    geom_pointrange(size = 1,aes(alpha = I(flag_alpha)),
                    position = position_dodge(width = 0.5)) +
    geom_hline(yintercept = 0, linetype = 2, color = "black") +
    scale_color_manual(values = manual_colors) +
    facet_wrap(~community, ncol = 1) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
    labs(
      title = "Estimated Marginal Means of Linear Trends",
      x = "Region",
      y = "beta",
      color = "Finfish Community")


# Table
lenb_emtrends %>%
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Length Spectra EMTrends")
```


### Mass Spectra


```{r}
## Trends

# Group Means
wtb_emtrends <- map_dfr(
  list(
    "Well-Studied Community" = sc_lenb
  ),
  function(x){
    region_posthoc <- emtrends(
      object = pluck(x, "pass_1"), 
      specs  =  ~ survey_area,
      var    = "yr_num",
      adjust = "bonf")
    region_posthoc %>% 
    as_tibble()
  }, .id = "community"
)




# Plotting Slope 
wtb_emtrends  %>% 
    mutate(flag_alpha = ifelse(lower.CL > 0 | upper.CL <0, 1, 0.4)) %>% 
    ggplot(aes(color = community, survey_area, yr_num.trend, ymin = lower.CL, ymax = upper.CL)) +
    geom_pointrange(size = 1,aes(alpha = I(flag_alpha)),
                    position = position_dodge(width = 0.5)) +
    geom_hline(yintercept = 0, linetype = 2, color = "black") +
     scale_color_manual(values = manual_colors) +
    scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
    labs(
      title = "Estimated Marginal Means of Linear Trends",
      x = "Region",
      y = "beta",
      color = "Finfish Community")




# Table
wtb_emtrends %>%
  mutate_if(is.numeric, ~round(.x, 3)) %>%
  group_by(community) %>% 
  gt() %>% 
  tab_header(title = "Mass Spectra EMTrends")
```






:::

```{r}
pass2_mods <- list(
  "Well-Studied_Median Weight"    = sc_wt$pass_2,
  "Well-Studied_Median Length"    = sc_len$pass_2,
  "Well-Studied_Length Spectra"   = sc_lenb$pass_2,
  "Well-Studied_Bodymass Spectra" = sc_wtb$pass_2,
  "Data-Limited_Median Length"    = lc_len$pass_2,
  "Data-Limited_Length Spectra"   = lc_lenb$pass_2)

```

# Pass 2: Model summary Tables

The following tabs display the linear model results from the second pass of analyses. These look at the relationships with bottom temperature and landings, and regional differences when accounting for those relationships.

::: panel-tabset

### Median Length (WS)

```{r}
# Small Community
mod_1 <- sc_len$pass_2 
(sc_len_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels())
```

### Median Length (DL)

```{r}
# Large Community
mod_1 <- lc_len$pass_2 
(lc_len_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels())


```


### Median Weight

```{r}
# Small Community
mod_1 <- sc_wt$pass_2 
(sc_wt_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels() )
```

### Length Spectra (WS)

```{r}
# Small Community
mod_1 <- sc_lenb$pass_2 
(sc_lenb_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels())
```


### Length Spectra (DL)


```{r}
# Large Community
mod_1 <- lc_lenb$pass_2 
(lc_lenb_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels())



```


### Mass Spectra

```{r}
# Small Community
mod_1 <- sc_wtb$pass_2 
(sc_wtb_table1 <- mod_1 %>% 
  gtsummary::tbl_regression()  %>% 
  add_global_p(keep = T) %>% 
  bold_p(t = 0.05)  %>%
  bold_labels() %>%
  italicize_levels() )
```
:::

# Pass 2: Effects

::: panel-tabset
### Median Length

```{r}

# Get ggpredict trends
len_temp_trends <- bind_rows(
  list(
    "Well-Studied Community" = as_tibble(ggpredict(sc_len$pass_2, terms = list("bot_temp" = seq(2,20, by = .5))) ) ,
    "Data-Limited Community" = as_tibble(ggpredict(lc_len$pass_2, terms = list("bot_temp" = seq(2,20, by = .5))) ) 
  ), .id = "community"
)

ggplot(
  len_temp_trends,
  aes(x, predicted, ymin = conf.low, ymax = conf.high, fill = community)) +
    geom_ribbon(alpha = 0.1) +
    geom_line() +
     scale_fill_manual(values = manual_colors) +
    labs(
      y = "Median Length (cm)",
      x = "Bottom Temperature",
      title = "Marginal Mean Trend",
      fill = "Finfish Community"
    )



```

```{r}

# Get ggpredict trends
len_landings_trends <- bind_rows(
  list(
    "Well-Studied Community" = as_tibble(ggpredict(sc_len$pass_2, terms = list("landings" = 10^c(1:10))) ) ,
    "Data-Limited Community" = as_tibble(ggpredict(lc_len$pass_2, terms = list("landings" = 10^c(1:10))) ) 
  ), .id = "community"
)

ggplot(
  len_landings_trends,
  aes(x, predicted, ymin = conf.low, ymax = conf.high, fill = community)) +
    geom_ribbon(alpha = 0.1) +
    geom_line() +
     scale_fill_manual(values = manual_colors) +
  scale_x_log10(labels = label_log(base = 10)) +
    labs(
      y = "Median Length (cm)",
      x = "Total Landings (lb.)",
      title = "Marginal Mean Trend",
      fill = "Finfish Community"
    )

```




```{r}

# EMMEANS Controlling for Temp & Landings
len_emmeans_2 <- map_dfr(
  list(
    "Data-Limited Community" = lc_len,
    "Well-Studied Community" = sc_len
    ),
  function(x){
    
    region_posthoc <- emmeans(
      object = pluck(x, "pass_2"), 
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response",
      data = pluck(x, "model_data")) %>% 
      pluck(1) %>% 
      as.data.frame()
  }, .id = "community"
)



# Plotting emmean
ggplot(
  len_emmeans_2,
  aes(survey_area, emmean, ymin = lower.CL, ymax = upper.CL,  color = community)) +
  geom_pointrange(size = 1,
    position = position_dodge(width = 0.5), 
    alpha = 1) +
  scale_color_manual(values = manual_colors) +
  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
  labs(
    y = "Median Length (cm)",
    x = NULL,
    color = "Finfish Community",
    title = "Estimated Marginal Means",
    subtitle = "Controlling for Temperature and Landings")

```



### Median Weight

```{r}

# Get ggpredict trends
wt_temp_trends <- bind_rows(
  list(
    "Well-Studied Community" = as_tibble(ggpredict(sc_wt$pass_2, terms = list("bot_temp" = seq(2,20, by = .5))) )  
  ), .id = "community"
)

ggplot(
  wt_temp_trends,
  aes(x, predicted, ymin = conf.low, ymax = conf.high, fill = community)) +
    geom_ribbon(alpha = 0.1) +
    geom_line() +
     scale_fill_manual(values = manual_colors) +
    labs(
      y = "MEdian Weight (kg)",
      x = "Bottom Temperature",
      fill = "Finfish Community",
      title = "Marginal Mean Trend"
    )



```

```{r}

# Get ggpredict trends
wt_landings_trends <- bind_rows(
  list(
    "Well-Studied Community" = as_tibble(ggpredict(sc_wt$pass_2, terms = list("landings" = 10^c(1:10))) ) 
  ), .id = "community"
)

ggplot(
  wt_landings_trends,
  aes(x, predicted, ymin = conf.low, ymax = conf.high, fill = community)) +
    geom_ribbon(alpha = 0.1) +
    geom_line() +
     scale_fill_manual(values = manual_colors) +
  scale_x_log10(labels = label_log(base = 10)) +
    labs(
      y = "Median Weight (kg)",
      x = "Total Landings (lb.)",
      title = "Marginal Mean Trend",
      fill = "Finfish Community"
    )



```


```{r}

# Group Means
wt_emmeans_2 <- map_dfr(
  list(
    "Well-Studied Community" = sc_wt
  ),
  function(x){
    region_posthoc <- emmeans(
      object = pluck(x, "pass_2"), 
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response",
      data = pluck(x, "model_data")) %>% 
      pluck(1) %>% 
      as.data.frame()
  }, .id = "community"
)

# Plotting emmean
ggplot(
  wt_emmeans_2,
  aes(survey_area, response, ymin = lower.CL, ymax = upper.CL,  color = community)) +
  geom_pointrange(size = 1,
    position = position_dodge(width = 0.5), 
    alpha = 1) +
   scale_color_manual(values = manual_colors) +
  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
  labs(
    y = "Median Weight (kg)",
    x = NULL,
    color = "Finfish Community",
    title = "Estimated Marginal Means",
    subtitle = "Controlling for Temperature and Landings")
```


### Length Spectra

```{r}

# Get ggpredict trends
lenb_temp_trends <- bind_rows(
  list(
    "Well-Studied Community" = as_tibble(ggpredict(sc_lenb$pass_2, terms = list("bot_temp" = seq(2,20, by = .5))) ) ,
    "Data-Limited Community" = as_tibble(ggpredict(lc_lenb$pass_2, terms = list("bot_temp" = seq(2,20, by = .5))) ) 
  ), .id = "community"
)

ggplot(
  lenb_temp_trends,
  aes(x, predicted, ymin = conf.low, ymax = conf.high, fill = community)) +
    geom_ribbon(alpha = 0.1) +
    geom_line() +
     scale_fill_manual(values = manual_colors) +
    labs(
      y = "Length Spectra Slope (b)",
      x = "Bottom Temperature",
      fill = "Finfish Community",
      title = "Marginal Mean Trend"
    )



```

```{r}

# Get ggpredict trends
lenb_landings_trends <- bind_rows(
  list(
    "Well-Studied Community" = as_tibble(ggpredict(sc_lenb$pass_2, terms = list("landings" = 10^c(1:10))) ) ,
    "Data-Limited Community" = as_tibble(ggpredict(lc_lenb$pass_2, terms = list("landings" = 10^c(1:10))) ) 
  ), .id = "community"
)

ggplot(
  lenb_landings_trends,
  aes(x, predicted, ymin = conf.low, ymax = conf.high, fill = community)) +
    geom_ribbon(alpha = 0.1) +
    geom_line() +
     scale_fill_manual(values = manual_colors) +
  scale_x_log10(labels = label_log(base = 10)) +
    labs(
      y = "Length Spectra Slope (b)",
      x = "Total Landings (lb.)",
      title = "Marginal Mean Trend",
      fill = "Finfish Community"
    )



```


```{r}
# Group Means
lenb_emmeans_2 <- bind_rows(
  list(
    "Data-Limited Community" = emmeans(
      object = pluck(lc_lenb, "pass_2"), 
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response",
      data = pluck(lc_lenb, "model_data")) %>%
      pluck(1) %>% 
      as.data.frame() %>% 
      mutate(season = "No Seasonal Effect"),
    
    "Well-Studied Community" = emmeans(
      object = pluck(sc_lenb, "pass_2"),
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response",
      data = pluck(sc_lenb, "model_data")) %>% 
      pluck(1) %>% 
      as.data.frame())
  , .id = "community"
)


# Plot
ggplot(
  lenb_emmeans_2,
  aes(survey_area, emmean, ymin = lower.CL, ymax = upper.CL,  color = community)) +
  geom_pointrange(size = 1,
    position = position_dodge(width = 0.5), 
    alpha = 1) +
  scale_color_manual(values = manual_colors) +
  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
  labs(
    y = "Length Spectra Slope (b)",
    x = NULL,
    color = "Finfish Community",
    title = "Estimated Marginal Means",
    subtitle = "Controlling for Temperature and Landings")


```


### Mass Spectra

```{r}

# Get ggpredict trends
wtb_temp_trends <- bind_rows(
  list(
    "Well-Studied Community" = as_tibble(ggpredict(sc_wtb$pass_2, terms = list("bot_temp" = seq(2,20, by = .5))) )  
  ), .id = "community"
)

ggplot(
  wtb_temp_trends,
  aes(x, predicted, ymin = conf.low, ymax = conf.high, fill = community)) +
    geom_ribbon(alpha = 0.1) +
    geom_line() +
     scale_fill_manual(values = manual_colors) +
    labs(
      y = "Mass Spectra Slope (b)",
      x = "Bottom Temperature",
      fill = "Finfish Community",
      title = "Marginal Mean Trend"
    )



```

```{r}

# Get ggpredict trends
wtb_landings_trends <- bind_rows(
  list(
    "Well-Studied Community" = as_tibble(ggpredict(sc_wtb$pass_2, terms = list("landings" = 10^c(1:10))) ) 
  ), .id = "community"
)

ggplot(
  wt_landings_trends,
  aes(x, predicted, ymin = conf.low, ymax = conf.high, fill = community)) +
    geom_ribbon(alpha = 0.1) +
    geom_line() +
     scale_fill_manual(values = manual_colors) +
  scale_x_log10(labels = label_log(base = 10)) +
    labs(
      y = "Mass Spectra Slope (b)",
      x = "Total Landings (lb.)",
      title = "Marginal Mean Trend",
      fill = "Finfish Community"
    )



```


```{r}
# Group Means
wtb_emmeans_2 <- map_dfr(
  list(
    "Well-Studied Community" = sc_wtb
  ),
  function(x){
    region_posthoc <- emmeans(
      object = pluck(x, "pass_2"), 
      list(pairwise ~ survey_area), 
      adjust = "tukey",
      type = "response",
      data = pluck(x, "model_data"))
    region_posthoc[[1]] %>% 
      as.data.frame()
  }, .id = "community"
)



# Plotting emmean
ggplot(
  wtb_emmeans_2,
  aes(survey_area, emmean, ymin = lower.CL, ymax = upper.CL,  color = community)) +
  geom_pointrange(size = 1,
    position = position_dodge(width = 0.5), 
    alpha = 1) +
   scale_color_manual(values = manual_colors) +
  scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
  labs(
    y = "Body Mass Spectra (b)",
    x = NULL,
    color = "Finfish Community",
    title = "Estimated Marginal Means",
    subtitle = "Controlling for Temperature and Landings")
```


:::



# Comparing Deviance Explained

```{r}

```



# Comparative Performance

```{r}
#| eval: false
#| label: which pass is better?

# All models from first pass perform better than second pass
plot(compare_performance(sc_len$pass_1, sc_len$pass_2))
plot(compare_performance(lc_len$pass_1, lc_len$pass_2))
plot(compare_performance(sc_lenb$pass_1, sc_lenb$pass_2))
plot(compare_performance(lc_lenb$pass_1, lc_lenb$pass_2))
plot(compare_performance(sc_wt$pass_1, sc_wt$pass_2))
plot(compare_performance(sc_wtb$pass_1, sc_wtb$pass_2))
```


